<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Termux 环境备份完整指南</title>
    <link href="/2025/05/17/Termux%20%E7%8E%AF%E5%A2%83%E5%A4%87%E4%BB%BD%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2025/05/17/Termux%20%E7%8E%AF%E5%A2%83%E5%A4%87%E4%BB%BD%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p>要完整备份你的 Termux 环境（包括文件、配置和库），以便在卸载后能完全恢复，可以按照以下步骤操作：</p><h2 id="方法一：使用-Termux-内置的备份功能"><a href="#方法一：使用-Termux-内置的备份功能" class="headerlink" title="方法一：使用 Termux 内置的备份功能"></a>方法一：使用 Termux 内置的备份功能</h2><ol><li><p><strong>确保你有存储权限</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">termux-setup-storage<br></code></pre></td></tr></table></figure></li><li><p><strong>创建备份</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/..<br>tar -zcvf /sdcard/termux-backup.tar.gz home usr<br></code></pre></td></tr></table></figure><p>这会将 Termux 的主目录和系统目录打包压缩到手机存储中，文件存储在sdcard目录下。</p></li></ol><p>执行 <code>cd ~/..</code> 然后 <code>tar -zcvf /sdcard/termux-backup.tar.gz home usr</code> 这个命令会备份 Termux 环境的以下关键内容：</p><h3 id="备份包含的内容："><a href="#备份包含的内容：" class="headerlink" title="备份包含的内容："></a>备份包含的内容：</h3><ol><li><p><strong><code>home</code> 目录</strong>（即 <code>~/</code> 或 <code>/data/data/com.termux/files/home</code>）：</p><ul><li>你的所有个人文件和数据</li><li>Shell 配置文件（如 <code>.bashrc</code>, <code>.zshrc</code>, <code>.profile</code> 等）</li><li>SSH 密钥和配置（<code>~/.ssh/</code>）</li><li>Termux 的配置（<code>~/.termux/</code>）</li><li>各种应用的配置文件（<code>~/.config/</code>）</li><li>你安装的脚本、项目文件等</li><li>通过 <code>termux-setup-storage</code> 创建的符号链接</li></ul></li><li><p><strong><code>usr</code> 目录</strong>（即 <code>/data/data/com.termux/files/usr</code>）：</p><ul><li>Termux 的基本系统文件</li><li>所有通过 <code>pkg</code> 或 <code>apt</code> 安装的软件</li><li>软件库和依赖项</li><li>二进制可执行文件（<code>/usr/bin/</code>）</li><li>头文件和库文件（<code>/usr/include/</code>, <code>/usr/lib/</code>）</li><li>共享数据（<code>/usr/share/</code>）</li><li>软件包管理器数据库</li></ul></li></ol><h3 id="方法一备份的优缺点："><a href="#方法一备份的优缺点：" class="headerlink" title="方法一备份的优缺点："></a>方法一备份的优缺点：</h3><p><strong>优点</strong>：</p><ul><li>几乎完整备份了整个 Termux 环境</li><li>包括所有安装的软件及其配置</li><li>恢复时可以完全重建原有环境</li><li>简单易行，一条命令完成</li></ul><p><strong>缺点</strong>：</p><ul><li>备份文件可能较大（包含所有安装的软件）</li><li>某些绝对路径的配置在恢复后可能需要调整</li><li>不包含 Termux 应用的内部数据（如会话历史等）</li></ul><h3 id="恢复时的注意事项："><a href="#恢复时的注意事项：" class="headerlink" title="恢复时的注意事项："></a>恢复时的注意事项：</h3><ol><li>恢复时需要完全相同的 Termux 版本</li><li>某些需要 root 权限的功能可能无法恢复</li><li>如果 Android 版本变化很大，某些二进制文件可能不兼容</li></ol><h3 id="替代方案："><a href="#替代方案：" class="headerlink" title="替代方案："></a>替代方案：</h3><p>如果只需要备份配置而不需要所有安装的软件，可以只备份 <code>home</code> 目录，然后恢复后重新安装软件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/..<br>tar -zcvf /sdcard/termux-config-backup.tar.gz home<br></code></pre></td></tr></table></figure><p>这个备份方法是最全面的 Termux 环境备份方式，适合需要完全恢复工作环境的用户。</p><h2 id="方法二：更详细的备份方案"><a href="#方法二：更详细的备份方案" class="headerlink" title="方法二：更详细的备份方案"></a>方法二：更详细的备份方案</h2><ol><li><p><strong>备份软件包列表</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg list-installed &gt; /sdcard/termux-packages.txt<br></code></pre></td></tr></table></figure></li><li><p><strong>备份所有重要目录</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /sdcard/termux-backup<br><span class="hljs-built_in">cp</span> -r ~/.termux /sdcard/termux-backup/<br><span class="hljs-built_in">cp</span> -r ~/.bashrc /sdcard/termux-backup/<br><span class="hljs-built_in">cp</span> -r ~/.profile /sdcard/termux-backup/<br><span class="hljs-built_in">cp</span> -r ~/.config /sdcard/termux-backup/<br><span class="hljs-built_in">cp</span> -r ~/.ssh /sdcard/termux-backup/<br><span class="hljs-built_in">cp</span> -r ~/.termux/boot /sdcard/termux-backup/<br></code></pre></td></tr></table></figure></li><li><p><strong>备份 Termux 属性文件</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /data/data/com.termux/files/home/.termux/termux.properties /sdcard/termux-backup/<br></code></pre></td></tr></table></figure></li></ol><h2 id="恢复环境的方法"><a href="#恢复环境的方法" class="headerlink" title="恢复环境的方法"></a>恢复环境的方法</h2><ol><li><p><strong>重新安装 Termux 后</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">termux-setup-storage<br></code></pre></td></tr></table></figure></li><li><p><strong>恢复备份</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/..<br>tar -zxvf /sdcard/termux-backup.tar.gz<br></code></pre></td></tr></table></figure></li><li><p><strong>或者手动恢复</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install $(<span class="hljs-built_in">cat</span> /sdcard/termux-packages.txt | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><span class="hljs-built_in">cp</span> -r /sdcard/termux-backup/.termux ~/<br><span class="hljs-built_in">cp</span> -r /sdcard/termux-backup/.bashrc ~/<br><span class="hljs-built_in">cp</span> -r /sdcard/termux-backup/.profile ~/<br><span class="hljs-built_in">cp</span> -r /sdcard/termux-backup/.config ~/<br><span class="hljs-built_in">cp</span> -r /sdcard/termux-backup/.ssh ~/<br></code></pre></td></tr></table></figure></li><li><p><strong>应用 Termux 属性</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">termux-reload-settings<br></code></pre></td></tr></table></figure></li></ol><h2 id="额外建议"><a href="#额外建议" class="headerlink" title="额外建议"></a>额外建议</h2><ol><li><p><strong>考虑使用 Git</strong>：如果你熟悉 Git，可以将你的配置文件存储在 GitHub 或 GitLab 上。</p></li><li><p><strong>定期更新备份</strong>：特别是当你安装了新软件或修改了配置后。</p></li><li><p><strong>验证备份</strong>：偶尔检查备份文件是否完整可读。</p></li><li><p><strong>云存储备份</strong>：将备份文件上传到云存储服务（如 Google Drive、Dropbox）以防设备丢失。</p></li></ol><p>这样你就可以在重新安装 Termux 后完全恢复到你熟悉的工作环境了。</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
      <category>软件打怪场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Termux</tag>
      
      <tag>环境搭建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Termux入门</title>
    <link href="/2025/05/17/Termux%E5%85%A5%E9%97%A8/"/>
    <url>/2025/05/17/Termux%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<p>Termux 是一款强大的 Android 终端模拟器和 Linux 环境应用，在手机上也能使用完整的命令行工具。以下是 Termux 的入门指南：</p><h2 id="1-基本安装与设置"><a href="#1-基本安装与设置" class="headerlink" title="1. 基本安装与设置"></a>1. 基本安装与设置</h2><h3 id="安装-Termux"><a href="#安装-Termux" class="headerlink" title="安装 Termux"></a>安装 Termux</h3><ul><li>从 <a href="https://f-droid.org/packages/com.termux/">F-Droid</a> 或 Google Play 商店安装</li><li>建议使用 F-Droid 版本，更新更及时，在国内可直接裸连，速度尽管不尽人意。同时使用F-Droid可以保证安装达Termux、Termux:API等插件的签名具有一致性，避免后续安装插件时因为安装包签名不一致安装失败。</li></ul><p>⚠️<em><strong>注意：Github release页APK与F-Droid安装包签名不一致</strong></em></p><h3 id="初始设置"><a href="#初始设置" class="headerlink" title="初始设置"></a>初始设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更新软件包</span><br>pkg update<br>pkg upgrade<br><br><span class="hljs-comment"># 安装基本工具</span><br>pkg install git curl wget nano vim<br></code></pre></td></tr></table></figure><h2 id="2-文件系统结构"><a href="#2-文件系统结构" class="headerlink" title="2. 文件系统结构"></a>2. 文件系统结构</h2><ul><li><code>~</code> (home目录): <code>/data/data/com.termux/files/home</code></li><li>存储目录: <code>~/storage</code> (需要先运行 <code>termux-setup-storage</code> 授权)</li><li>软件安装目录: <code>/data/data/com.termux/files/usr</code></li></ul><h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h2><h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg search &lt;package&gt;  <span class="hljs-comment"># 搜索软件包</span><br>pkg install &lt;package&gt; <span class="hljs-comment"># 安装软件包</span><br>pkg remove &lt;package&gt;  <span class="hljs-comment"># 卸载软件包</span><br>pkg list-all          <span class="hljs-comment"># 列出所有可用软件包</span><br></code></pre></td></tr></table></figure><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span>          <span class="hljs-comment"># 列出文件</span><br><span class="hljs-built_in">cd</span>          <span class="hljs-comment"># 切换目录</span><br><span class="hljs-built_in">cp</span>          <span class="hljs-comment"># 复制文件</span><br><span class="hljs-built_in">mv</span>          <span class="hljs-comment"># 移动/重命名文件</span><br><span class="hljs-built_in">rm</span>          <span class="hljs-comment"># 删除文件</span><br><span class="hljs-built_in">mkdir</span>       <span class="hljs-comment"># 创建目录</span><br></code></pre></td></tr></table></figure><h2 id="4-实用工具安装"><a href="#4-实用工具安装" class="headerlink" title="4. 实用工具安装"></a>4. 实用工具安装</h2><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install python nodejs clang<br></code></pre></td></tr></table></figure><h3 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install nmap net-tools openssh<br></code></pre></td></tr></table></figure><h3 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install grep sed awk micro<br></code></pre></td></tr></table></figure><h2 id="5-高级功能"><a href="#5-高级功能" class="headerlink" title="5. 高级功能"></a>5. 高级功能</h2><h3 id="SSH-服务"><a href="#SSH-服务" class="headerlink" title="SSH 服务"></a>SSH 服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install openssh<br>sshd        <span class="hljs-comment"># 启动SSH服务</span><br>passwd      <span class="hljs-comment"># 设置密码</span><br></code></pre></td></tr></table></figure><h3 id="使用外置键盘"><a href="#使用外置键盘" class="headerlink" title="使用外置键盘"></a>使用外置键盘</h3><p>Termux 支持外接键盘快捷键：</p><ul><li>Ctrl 键: 音量减键</li><li>Alt 键: 音量增键</li><li>ESC 键: 音量减+音量增</li></ul><h2 id="6-自定义配置"><a href="#6-自定义配置" class="headerlink" title="6. 自定义配置"></a>6. 自定义配置</h2><h3 id="修改-bashrc"><a href="#修改-bashrc" class="headerlink" title="修改.bashrc"></a>修改.bashrc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.bashrc<br></code></pre></td></tr></table></figure><p>添加个性化配置，如别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> ll=<span class="hljs-string">&#x27;ls -la&#x27;</span><br><span class="hljs-built_in">alias</span> update=<span class="hljs-string">&#x27;pkg update &amp;&amp; pkg upgrade&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="安装ZSH和Oh-My-Zsh"><a href="#安装ZSH和Oh-My-Zsh" class="headerlink" title="安装ZSH和Oh-My-Zsh"></a>安装ZSH和Oh-My-Zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install zsh<br>sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><h2 id="7-注意事项"><a href="#7-注意事项" class="headerlink" title="7. 注意事项"></a>7. 注意事项</h2><ol><li>Termux 默认没有root权限</li><li>某些操作可能需要额外权限</li><li>定期备份重要文件</li><li>谨慎运行未知脚本</li></ol><h2 id="8-学习资源"><a href="#8-学习资源" class="headerlink" title="8. 学习资源"></a>8. 学习资源</h2><ul><li>官方Wiki: <a href="https://wiki.termux.com/">https://wiki.termux.com</a></li><li>GitHub: <a href="https://github.com/termux/termux-app">https://github.com/termux/termux-app</a></li><li>社区论坛: <a href="https://termux.com/community">https://termux.com/community</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
      <category>软件打怪场</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Termux 环境备份完整指南</title>
    <link href="/2025/05/17/%E4%B8%89%E6%80%81%E7%BC%93%E5%86%B2%E5%99%A8/"/>
    <url>/2025/05/17/%E4%B8%89%E6%80%81%E7%BC%93%E5%86%B2%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>三态缓冲器是数字电路中一种重要的逻辑器件，允许输出端呈现高电平、低电平或高阻态（Z）。以下是其关键点总结：</p><h3 id="基本结构和工作原理"><a href="#基本结构和工作原理" class="headerlink" title="基本结构和工作原理"></a>基本结构和工作原理</h3><ul><li><strong>输入与输出</strong>：具有数据输入（A）、控制信号（EN&#x2F;OE）和输出（Y）。当控制信号有效时，输出跟随输入（同相或反相）；无效时，输出为高阻态。</li><li><strong>内部电路</strong>：通常由MOS管构成，控制信号决定是否导通。当EN无效时，上下MOS管均截止，输出端断开，呈现高阻态</li></ul><p>三态缓冲器（Tri-state Buffer）是数字电路中的核心组件，其独特的<strong>高阻态</strong>特性使其在多种场景中不可或缺。以下从<strong>主要应用</strong>和<strong>使用原因</strong>两方面进行详细解析：</p><hr><h3 id="一、主要应用"><a href="#一、主要应用" class="headerlink" title="一、主要应用"></a><strong>一、主要应用</strong></h3><ol><li><p><strong>总线控制与共享</strong>  </p><ul><li><strong>避免总线冲突</strong>：在计算机系统中，数据总线、地址总线和控制总线需要连接多个设备（如CPU、内存、外设）。三态缓冲器通过使能信号控制设备的输出状态，确保同一时间仅有一个设备驱动总线，防止多设备同时传输导致的数据冲突。  </li><li><strong>分时复用总线</strong>：例如PCI总线和I²C总线中，设备通过三态缓冲器分时占用总线资源，实现高效数据传输。</li></ul></li><li><p><strong>存储器与接口设计</strong>  </p><ul><li><strong>存储器接口</strong>：在CPU与存储器（如RAM、ROM）之间，三态缓冲器用于控制数据读写操作，放大信号并隔离干扰，提升数据传输可靠性。  </li><li><strong>I&#x2F;O接口</strong>：连接外部设备（如键盘、显示器）时，缓冲器实现信号电平转换和同步，增强设备兼容性。</li></ul></li><li><p><strong>数据选择与路由</strong>  </p><ul><li><strong>多路复用器（MUX）</strong>：通过组合多个三态缓冲器，选择性地将不同输入信号路由至单一输出，简化电路复杂度。  </li><li><strong>双向通信</strong>：例如在SPI或UART接口中，结合两个三态缓冲器实现数据的双向传输。</li></ul></li><li><p><strong>通信与工业系统</strong>  </p><ul><li><strong>信号隔离与保护</strong>：在通信系统中，高阻态可隔离噪声干扰，保护敏感电路；工业控制中用于传感器与执行器的信号处理，防止电气干扰影响系统稳定性。  </li><li><strong>热插拔支持</strong>：三态缓冲器的高阻态特性允许设备在不关闭系统的情况下插拔，避免电流冲击。</li></ul></li><li><p><strong>消费电子与嵌入式系统</strong>  </p><ul><li><strong>遥控器按键复用</strong>：通过使能信号控制按键信号的输出，减少线路数量。  </li><li><strong>嵌入式设备接口</strong>：如微控制器通过三态缓冲器连接外设，灵活切换输入&#x2F;输出模式。</li></ul></li></ol><hr><h3 id="二、为什么要用三态缓冲器？"><a href="#二、为什么要用三态缓冲器？" class="headerlink" title="二、为什么要用三态缓冲器？"></a><strong>二、为什么要用三态缓冲器？</strong></h3><ol><li><p><strong>解决总线竞争问题</strong><br>多设备共享总线时，三态缓冲器通过高阻态隔离非活动设备，确保数据传输的独占性和完整性，避免短路风险。</p></li><li><p><strong>灵活控制信号传输</strong><br>使能信号（EN）可动态控制输出状态，支持分时复用和复杂逻辑设计，提升系统灵活性。</p></li><li><p><strong>信号隔离与保护</strong><br>高阻态等效于电路断开，防止信号干扰和电平冲突，保护敏感元件（如CPU引脚）免受损坏。</p></li><li><p><strong>降低功耗与优化设计</strong>  </p><ul><li><strong>低功耗模式</strong>：高阻态下输出端几乎不消耗电流，适用于节能设计。  </li><li><strong>简化电路结构</strong>：替代复杂的继电器或开关电路，减少元器件数量和布线复杂度。</li></ul></li><li><p><strong>支持高速与高集成度设计</strong><br>现代三态缓冲器响应时间短（纳秒级），适用于高速总线（如PCIe、SATA），同时集成化设计满足紧凑的PCB布局需求。</p></li><li><p><strong>电平转换与驱动能力增强</strong><br>在不同电压逻辑电路间（如TTL与CMOS）充当电平转换器，并通过高驱动能力减少信号衰减。</p></li></ol><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>三态缓冲器的核心价值在于其<strong>高阻态控制</strong>能力，使其成为总线管理、信号隔离和多设备协作中的关键组件。其应用场景覆盖计算机、通信、工业控制等多个领域，未来随着集成度和智能化提升，三态缓冲器将在高速、低功耗及复杂系统中发挥更大作用。</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
      <category>硬件修罗塔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>硬件</tag>
      
      <tag>数电</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
